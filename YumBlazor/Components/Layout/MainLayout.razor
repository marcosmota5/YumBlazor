@using YumBlazor.Utility
@inherits LayoutComponentBase
@inject AuthenticationStateProvider _AuthenticationStateProvider

<div class="page">
    <AuthorizeView Roles="@SD.Role_Admin">
        <div class="sidebar">
            <NavBarAdmin />
        </div>
    </AuthorizeView>
@*     <AuthorizeView Roles="@SD.Role_Admin">
        Any authorized user
    </AuthorizeView>
    <AuthorizeView Roles="@SD.Role_Admin">
        ADMIN
    </AuthorizeView>
    <AuthorizeView Roles="@SD.Role_Customer">
        CUSTOMER
    </AuthorizeView> *@

    <main>
        @if(_navBarVisible)
        {
            <NavBar></NavBar>
        }

        <article class="content">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _navBarVisible;

    protected override async Task OnInitializedAsync()
    {
        _navBarVisible = await ShowNavBar();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _navBarVisible = await ShowNavBar();
        // if (firstRender)
        // {
        //     _navBarVisible = await ShowNavBar();
        //     StateHasChanged();
        // }
    }

    private async Task<bool> ShowNavBar()
    {
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();

        var user = authState.User;
        var authenticated = user.Identity is not null && user.Identity.IsAuthenticated;


        if (!authenticated)
        {
            return true;
        }

        // Navbar should not be displayed for admin users
        if(!user.IsInRole(SD.Role_Admin))
        {
            return true;
        }

        return false;
    }
}